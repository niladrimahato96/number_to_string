{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","state","inputValue","stringValue","error","ones","val","stringNumber","map","number","index","tens","tensRest","large","largeNumString","largeNum","num","console","log","tensHandler","integerValue","_this","tensPlace","Math","floor","onesPlace","setInputHandler","x","target","value","toString","length","parseInt","setState","onesPlaceThree","tensPlaceThree","hundredsPlaceThree","combineNumber","replace","onesPlaceFour","tensPlaceFour","hundredsPlaceFour","thousandPlaceFour","combineNumberFour","onesPlaceFive","tensPlaceFive","hundredsPlaceFive","thousandPlaceFive","combineNumberFive","combineNumberTensFive","react_default","a","createElement","className","style","marginTop","textAlign","border","padding","borderRadius","textIndent","color","boxShadow","outline","fontSize","fontWeight","letterSpacing","type","onChange","this","fontFamily","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c60cff22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport QRCode from 'qrcode.react';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    inputValue: '',\r\n    stringValue: '',\r\n    error: false\r\n  }\r\n\r\n  ones = (val) => {\r\n    let ones = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\r\n    \r\n    let stringNumber = ''\r\n    let num = ones.map((number, index) => {\r\n      if(val === index){\r\n        stringNumber = number;\r\n      }\r\n    });\r\n\r\n    if(stringNumber === 'zero'){\r\n      stringNumber = '';\r\n    }\r\n    return stringNumber;\r\n  }\r\n\r\n  tens = (val) => {\r\n    let tens = ['zero','ten', 'twenty' , 'thirty', 'forty' ,'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\r\n    let stringNumber = '';\r\n    \r\n    let num = tens.map((number, index) => {\r\n      if(val === index){\r\n        stringNumber = number;\r\n      }\r\n    });\r\n    return stringNumber;\r\n  }\r\n\r\n  tensRest = (val) => {\r\n    let tensRest = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen', 'twenty'];\r\n    \r\n    let stringNumber = ''\r\n    let num = tensRest.map((number, index) => {\r\n      if(val === index){\r\n        stringNumber = number;\r\n      }\r\n    });\r\n    return stringNumber;\r\n  }\r\n\r\n  large = (val) => {\r\n    let large = ['hundred', 'thousand', 'lakh', 'crore'];\r\n    let largeNumString = '';\r\n    let largeNum = large.map((num, index) =>{\r\n      if((val - 3) == index){\r\n        largeNumString = num;\r\n      }\r\n    });\r\n    console.log(largeNum);\r\n    return largeNumString;\r\n  }\r\n\r\n\r\n  tensHandler = (integerValue) => {\r\n    console.log(integerValue);\r\n    if(integerValue < 20){\r\n      return this.tensRest(integerValue-10); \r\n    }else{\r\n      let tensPlace = this.tens(Math.floor(integerValue/10));\r\n      let onesPlace = this.ones(integerValue%10);\r\n      console.log(tensPlace + ' ' + onesPlace);\r\n      return tensPlace + ' ' + onesPlace;\r\n    }\r\n  }\r\n\r\n  setInputHandler = (val) => {\r\n    let x = val.target.value.toString().length;\r\n    let integerValue = parseInt(val.target.value);\r\n     \r\n    if((integerValue < 100000) && (integerValue > 0)){\r\n      this.setState({error: false});\r\n      let stringValue = '';\r\n    switch(x){\r\n      case 1:\r\n        let number = this.ones(integerValue);\r\n        stringValue = number;\r\n        break;\r\n        \r\n      case 2:\r\n        let onesPlaceNumber = integerValue%10;\r\n        if(onesPlaceNumber === 0){\r\n          let numberTen = this.tens(integerValue/10);\r\n          stringValue = numberTen;\r\n        }else{\r\n          stringValue = this.tensHandler(integerValue);\r\n        }\r\n        break;\r\n\r\n      case 3:\r\n        let onesPlaceThree = integerValue%10;\r\n        let tensPlaceThree = Math.floor(integerValue/10)%10;\r\n        let hundredsPlaceThree = Math.floor(integerValue/100);\r\n        if((onesPlaceThree === 0) && (tensPlaceThree === 0)){\r\n          stringValue = this.ones(hundredsPlaceThree) + \" \" + this.large(x); \r\n        }else{\r\n          if(tensPlaceThree === 0){\r\n            stringValue = this.ones(hundredsPlaceThree) + \" \" + this.large(x) + \" \" + this.ones(onesPlaceThree); \r\n          }else if(onesPlaceThree === 0){\r\n            stringValue = this.ones(hundredsPlaceThree) + \" \" + this.large(x) + \" \" + this.tens(tensPlaceThree);\r\n          }else{\r\n            let combineNumber = tensPlaceThree+ \" \"+onesPlaceThree;\r\n            combineNumber = combineNumber.replace(/ +/g, \"\");\r\n            combineNumber = parseInt(combineNumber);\r\n           stringValue = this.ones(hundredsPlaceThree) + \" \" + this.large(x) + \" \" + this.tensHandler(combineNumber);\r\n          }\r\n        }\r\n        break;\r\n      case 4:\r\n        let onesPlaceFour = integerValue%10;\r\n        let tensPlaceFour = Math.floor(integerValue/10)%10;\r\n        let hundredsPlaceFour = Math.floor(integerValue/100)%10;\r\n        let thousandPlaceFour = Math.floor(integerValue/1000);\r\n        \r\n        if((hundredsPlaceFour === 0) && (tensPlaceFour === 0) && (onesPlaceFour === 0)){\r\n          stringValue = this.ones(thousandPlaceFour) + \" \" + this.large(x);\r\n        }else if((hundredsPlaceFour === 0) && (tensPlaceFour === 0)){\r\n          stringValue = this.ones(thousandPlaceFour) + \" \" + this.large(x) + \" \" + this.ones(onesPlaceFour);\r\n        }else{\r\n          if(hundredsPlaceFour === 0){\r\n            let combineNumberFour = tensPlaceFour+ \" \"+onesPlaceFour;\r\n            combineNumberFour = combineNumberFour.replace(/ +/g, \"\");\r\n            combineNumberFour = parseInt(combineNumberFour);\r\n            stringValue = this.ones(thousandPlaceFour) + \" \" + this.large(x) + \" \" +this.tensHandler(combineNumberFour);\r\n          }else if(tensPlaceFour === 0){\r\n            stringValue = this.ones(thousandPlaceFour) + \" \" + this.large(x) + \" \" + this.ones(hundredsPlaceFour) + \" \" + this.large(x - 1) + \" \" + this.ones(onesPlaceFour);\r\n          }else{\r\n            let combineNumberFour = tensPlaceFour+ \" \"+onesPlaceFour;\r\n            combineNumberFour = combineNumberFour.replace(/ +/g, \"\");\r\n            combineNumberFour = parseInt(combineNumberFour);\r\n\r\n            stringValue = this.ones(thousandPlaceFour) + \" \" + this.large(x) + \" \" + this.ones(hundredsPlaceFour) + \" \" + this.large(x - 1) + \" \" + this.tensHandler(combineNumberFour);\r\n          }\r\n        }\r\n        \r\n        break;\r\n      case 5:\r\n        let onesPlaceFive = integerValue%10;\r\n        let tensPlaceFive = Math.floor(integerValue/10)%10;\r\n        let hundredsPlaceFive = Math.floor(integerValue/100)%10;\r\n        let thousandPlaceFive = Math.floor(integerValue/1000)%10;\r\n        let tensThousandPlaceFive = Math.floor(integerValue/10000);\r\n        \r\n        let combineNumberFive = tensThousandPlaceFive+ \" \"+ thousandPlaceFive;\r\n            combineNumberFive = combineNumberFive.replace(/ +/g, \"\");\r\n            combineNumberFive = parseInt(combineNumberFive);\r\n        if(((thousandPlaceFive === 0) && (hundredsPlaceFive === 0) && (tensPlaceFive === 0) && (onesPlaceFive === 0)) || ((hundredsPlaceFive === 0) && (tensPlaceFive === 0) && (onesPlaceFive === 0))){\r\n            \r\n          stringValue = this.tensHandler(combineNumberFive) + \" \" + this.large(x - 1);\r\n        }else if((hundredsPlaceFive === 0) && (tensPlaceFive === 0)){\r\n          stringValue = this.tensHandler(combineNumberFive)  + \" \" + this.large(x - 1) + \" \" + this.ones(onesPlaceFive);\r\n        }else if((hundredsPlaceFive === 0)){\r\n          let combineNumberTensFive = tensPlaceFive+ \" \"+ onesPlaceFive;\r\n            combineNumberTensFive = combineNumberTensFive.replace(/ +/g, \"\");\r\n            combineNumberTensFive = parseInt(combineNumberTensFive);\r\n          stringValue = this.tensHandler(combineNumberFive)  + \" \" + this.large(x - 1) + \" \" + this.tensHandler(combineNumberTensFive);\r\n        }else{\r\n          if(tensPlaceFive === 0){\r\n            stringValue = this.tensHandler(combineNumberFive)  + \" \" + this.large(x - 1) + \" \" + this.ones(hundredsPlaceFive) + \" \" + this.large(x - 2) + \" \" + this.ones(onesPlaceFive);\r\n          }else{\r\n            let combineNumberTensFive = tensPlaceFive+ \" \"+ onesPlaceFive;\r\n            combineNumberTensFive = combineNumberTensFive.replace(/ +/g, \"\");\r\n            combineNumberTensFive = parseInt(combineNumberTensFive);\r\n            stringValue = this.tensHandler(combineNumberFive)  + \" \" + this.large(x - 1) + \" \" + this.ones(hundredsPlaceFive) + \" \" + this.large(x - 2) + \" \" + this.tensHandler(combineNumberTensFive);\r\n          }\r\n        }\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n      \r\n      this.setState({\r\n        inputValue: val.target.value,\r\n        stringValue: stringValue\r\n      });\r\n\r\n    }else{\r\n      this.setState({inputValue: '', stringValue: '', error: !this.state.error});\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\" style={{marginTop: '10%'}} >\r\n        {/* <QRCode  bgColor=\"#cccccc\" level=\"M\" value=\"ef537f25c895bfa782526529a9b63d97aa631564d5d789c2b765448c8635fb6c\" /> */}\r\n        <input style={{\r\n          textAlign: 'center',\r\n          border: '3px solid #505f9f',\r\n          padding: '5px',\r\n          borderRadius: '10px',\r\n          textIndent: '6px',\r\n          color: '#515151',\r\n          boxShadow: '0px 6px 6px #0d0d0d47',\r\n          outline: 'none',\r\n          fontSize: '14px',\r\n          fontWeight: '600',\r\n          letterSpacing: '1px',\r\n        }} type=\"text\" onChange={this.setInputHandler} value={this.state.inputValue}/>\r\n        <p style={{\r\n          color: '#e95555',\r\n          fontSize: '13px',\r\n          fontFamily: 'monospace',\r\n          fontWeight: '800',\r\n        }}>{this.state.error ? '0 < Input < 1 Lakh' : ''}</p>\r\n        <p style={{\r\n              fontFamily: 'monospace',\r\n              fontSize: '20px',\r\n              color: '#7a97e7',\r\n              fontWeight: '600',\r\n        }}>{this.state.stringValue}</p>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}